%p#notice= notice
.app_content-header
  = link_to projects_path do
    %i.fa.fa-chevron-left
    Volver
.container-fluid
  .row
    .col-lg-5
      .project_card
        .project_card-header
          .project_card-label
            .project_card-media
              %span.media-circle
                = image_tag(@project.logo_image) if @project.logo_image.attached?
            .project_card-info
              = link_to @project, class: 'project_card-title' do
                = @project.title
              .dropdown
                %button#dropdownMenuButton.btn.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
                  %span.badge.badge_custom.red= @project.status
                .dropdown-menu{"aria-labelledby" => "dropdownMenuButton"}
                  - @project.possible_transitions.each do |state|
                    %a.dropdown-item.change-state{href: '#!', 'data-form' => "form#{state.capitalize}"}
                      = state&.capitalize
                      .hidden
                        = form_for @project, url: "/projects/#{@project.id}/update_state", html: { id: "form#{state.capitalize}" } do |form|
                          = form.text_field "transition_to", value: "to_#{state}"
                          = form.submit
          .project_card-actions
            = link_to edit_project_path(@project) do
              %i.fa.fa-pencil
            = link_to @project, method: :delete, data: { confirm: '多Seguro que desea eliminar?' } do
              %i.fa.fa-trash
        .project_card-body
          .mb-3
            - @project.techs.each do |tech|
              %span.badge.badge-primary= tech
          .body-stats
            .body-item
              %span.body-item-span Inicio
              .body-label.start-date
                %span= @project.start_date.strftime('%d %b, %y')
            .body-item
              %span.body-item-span Entrega
              .body-label.due-date
                %span= @project.due_date.strftime('%d %b, %y')
          .flex-fill.mt-3
            - task_progress = 0
            - task_progress = ((@project.tasks.completed.size.to_f / @project.tasks.size.to_f) * 100).round unless @project.tasks.count.zero?
            %span Progreso
            %a{href:'#'}
              %i.fa.fa-refresh
            .d-flex.align-items-center
              .progress{style: "height: 5px;width: 100%;"}
                .progress-bar{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => task_progress, role: "progressbar", style: "width: #{task_progress}%;"}
              %span
                = task_progress.to_s + '%'
          .project_card-desc
            %span= @project.description

      .project_card
        .project_card-header
          .project_card-label
            .project_card-info
              %h5
                %i.fa.fa-list-ul
                Desarrolladores
        .content
          .row
            - @project.developers.each do |dev|
              .col-lg
                .card
                  .card-body
                    = dev.name
        .content
          = form_for @project, method: :put do |form|
            = form.select(:developer_ids, @developers.map{|dev| ["#{dev&.name} - #{dev&.level} - Disponibilidad: #{dev&.progress}%", dev.id]}, {}, { multiple: true })
            = form.submit 'Asignar dev', class: 'btn btn-custom mt-3'
      .project_card
        .project_card-header
          .project_card-label
            .project_card-info
              %h5
                %i.fa.fa-files-o
                Archivos
        - @project.files.each do |file|
          .list-file
            .list-file-thumb
              %i.fa.fa-file-pdf-o
              %h6
                %a{href:"#{rails_blob_url(file)}"}= rails_blob_url(file).split('/').last
            %a.refresh(href="")
              %i.fa.fa-download

    .col-lg-7
      .project_card
        .project_card-header
          .project_card-label
            .project_card-info
              %h5
                %i.fa.fa-list-ul
                Requerimientos
          #open.btn.btn-custom Agregar +
          #close.btn.btn-custom{style:'display:none'} Cerrar
        #requirementsAccordion.accordion
          - @project.requirements.each_with_index do |req, x|
            .card
              .card-header{"aria-controls" => "collapse-#{req.id}", "aria-expanded" => "#{ x == 0 ? "true" : "false"}", "data-target" => "#collapse-#{req.id}", "data-toggle" => "collapse"}
                %button.btn.btn-link
                  = req.title
                .card-header-actions
                  = link_to edit_requirement_path(req) do
                    %i.fa.fa-pencil
                  = link_to req, method: :delete, data: { confirm: '多Seguro que desea eliminar?' } do
                    %i.fa.fa-trash
              .collapse{class: "#{ x == 0 ? "show" : ""}", "data-parent" => "#requirementsAccordion", id: "collapse-#{req.id}"}
                .card-body
                  %ul.task-list.mb-3{'data-req' => req.id}
                    - req.tasks.by_created_at.each do |task|
                      = render partial: 'task', locals: {task: task}
                    %li
                  .form-group
                    %span
                      %i.fa.fa-plus
                        A単adir tareas al requerimiento
                    %input.create-task-input.form-control{type: "text", 'data-req' => req.id}/
        = form_for @project do |f|
          #requirements
            = f.fields_for :requirements, @project.requirements.new do |requirement|
              = render 'requirement_fields', f: requirement
            .links.mb-3
              = link_to_add_association f, :requirements do
                %i.fa.fa-plus
                A単adir otro antes de guardar
            = f.submit 'Guardar', class: 'btn btn-custom'

:javascript
  $(document).ready(function() {

    $(".refresh").click(function(){
        location.reload(true);
    });

    $("#open").click(function () {
        $("#requirements").show("slow");
        $("#open").css('display','none');
        $("#close").css('display','block');
    });
    $("#close").click(function () {
        $("#requirements").hide("slow");
        $("#close").css('display','none');
        $("#open").css('display','block');
    });

    $(".create-task-input").keypress(function(event) {
      createTask(event);
    });

    // Submit form when dropdown option is clicked
    $('.change-state').click(function (e) {
      let formId = e.target.getAttribute('data-form');

      $('#' + formId).submit();
    })

    // select2
    $('#project_developer_ids').select2({});

    function taskTemplate(id, title){
      return `
        <li class="d-flex justify-content-between">
          <div class="task-title">
            <input class="task-checkbox styled-checkbox" id="task-${id}" type="checkbox">
            <label for="task-${id}">${title}</label>
          </div>
        </li>
      `
    }

    function createTask(event) {
        console.log('event.which: ', event.which)
      if (event.which == 13) {
        event.preventDefault();
        let target = event.target;
        let title = target.value;
        let reqId = target.dataset.req
        let task = {
          task: {
            title,
            requirement_id: reqId
          }
        }
        fetch('/tasks', {
          method: 'post',
          body: JSON.stringify(task),
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': Rails.csrfToken()
          },
          credentials: 'same-origin'
        }).then(function(response) {
          return response.json();
        }).then(function(data) {
          console.log('data: ', data);
          // add task to list
          $(`.task-list[data-req=${reqId}]`).append(taskTemplate(data.id, data.title));

          // Clean input
          event.target.value = '';
        }).catch(function(error) {
          alert('Error: ', error);
        });
      }
    }

    $(".task-checkbox").change(function(e) {
      let isChecked = e.target.checked;
      let taskId = e.target.id.split('-')[1];
      Rails.ajax({
        url: `/tasks/${taskId}`,
        type: "PUT",
        data: `task[status=${isChecked}`,
        success: function(data) {
          console.log('data success: ', data);
        },
        error: function(data) {
          console.log('data error: ', data)
        }
      });
    });
  });

:css
  #requirements {
    display: none;
  }
  .hidden {
    display: none;
  }

:scss
  .select2 {
    width: 94.6% !important;
  }
